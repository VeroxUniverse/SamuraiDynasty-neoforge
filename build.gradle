plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}

subsystems {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
    parchment {
        minecraftVersion = "1.20.2"

        // The version of Parchment mappings to apply.
        // See https://parchmentmc.org/docs/getting-started for a list.
        // Defaults to the value of Gradle property neogradle.subsystems.parchment.mappingsVersion
        mappingsVersion = "2023.12.10"

        // Overrides the full Maven coordinate of the Parchment artifact to use
        // This is computed from the minecraftVersion and mappingsVersion properties by default.
        // If you set this property explicitly, minecraftVersion and mappingsVersion will be ignored.
        // The built-in default value can also be overriden using the Gradle property neogradle.subsystems.parchment.parchmentArtifact
        // parchmentArtifact = "org.parchmentmc.data:parchment-$minecraftVersion:$mappingsVersion:checked@zip"

        // Set this to false if you don't want the https://maven.parchmentmc.org/ repository to be added automatically when
        // applying Parchment mappings is enabled
        // The built-in default value can also be overriden using the Gradle property neogradle.subsystems.parchment.addRepository
        // addRepository = true

        // Can be used to explicitly disable this subsystem. By default, it will be enabled automatically as soon
        // as parchmentArtifact or minecraftVersion and mappingsVersion are set.
        // The built-in default value can also be overriden using the Gradle property neogradle.subsystems.parchment.enabled
        // enabled = true
    }
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

// Mojang ships Java 21 to end users starting in 1.20.5, so mods should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    mavenLocal()
    maven {url 'https://libs.azuredoom.com:4443/mods'}
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = "https://jitpack.io" }
    maven {
        name = "SmartBrainLib (SBL) Maven Repo"
        url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
    }
    maven {
        name = "Iron's Maven - Release"
        url = "https://code.redspace.io/releases"
    }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.enginehub.org/repo/" }
    maven { url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://maven.kosmx.dev/" }
}

dependencies {

    implementation "net.neoforged:neoforge:${neo_version}"

    implementation "mod.azure.azurelib:azurelib-neo-${minecraft_version}:${azurelib_version}"

    // JEI
    compileOnly "mezz.jei:jei-1.21-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-1.21-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-1.21-neoforge:${jei_version}"

    // Curios
    implementation "curse.maven:adorned-1036809:5546365"

    // Better Combat
    runtimeOnly "maven.modrinth:better-combat:2.0.2+1.21.1-neoforge"
    runtimeOnly "curse.maven:cloth-config-348521:5623420"
    runtimeOnly "curse.maven:playeranimator-658587:5698755"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description,
            azurelib_version_range  : azurelib_version_range,
            curios_version_range : curios_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
